{"version":3,"sources":["directives/CalculatorView.ts","controllers/CalculatorCtrl.ts","Application.ts","_all.ts"],"names":[],"mappings":"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","file":"Application.js","sourcesContent":["/// <reference path=\"../_all.ts\" />\nmodule CalculatorApp {\n    'use strict';\n\n    export function CalculatorView() : ng.IDirective {\n        return {\n            restrict: 'E',\n            controller: CalculatorCtrl,\n            controllerAs: \"vm\",\n            templateUrl: './app/directives/CalculatorView.html',\n            link: ( scope: ICalcViewScope, element: JQuery, atts: ng.IAttributes ) => {\n\n                element.find('button').on( 'click', (event) => {\n                    event.preventDefault();\n\n                    var target      = event.target,\n                        dataValue   = target.getAttribute('data-value');\n\n                    if( target.innerHTML ){\n\n                        scope.vm.appendToExpression(\n                            dataValue ? dataValue : target.innerHTML\n                        );\n\n                    }\n                } );\n            }\n        }\n    }\n}\n","/// <reference path=\"../_all.ts\" />\nmodule CalculatorApp {\n    'use strict';\n\n    export class CalculatorCtrl implements ICalculatorCtrl{\n\n        public static $inject = ['$scope'];\n\n        constructor(\n            private $scope : ICalculatorScope\n        ) {\n\n            // Controller init properties\n            $scope.output = \"\";\n            $scope.expression = new Array();\n            $scope.decimalAdded = false;\n            $scope.outputSize = 'big'; // Flexible output text size\n            $scope.operators = ['+', '-', '*', '/'] // Main operators\n        }\n\n        private appendOperator( expression, operator ) {\n\n            // Get last char at expression string\n            var last = expression[ expression.length - 1 ];\n\n            // Check may have some other operators before this operators. Operators can't be add one by one\n            return ( (this.$scope.operators.indexOf( last ) > -1 && expression.length > 1) || !expression.length ) ?\n                expression.substring( 0, expression.length - 1 ) :\n                expression + operator;\n\n        }\n\n        private calculateExpresion( expression ) {\n\n            var last = expression[ expression.length - 1 ], result;\n\n            if( this.$scope.operators.indexOf( last ) > -1 || last == \".\" ){\n                expression = expression.substring( 0, expression.length - 1 );\n            }\n\n            // Catch invalid expression, and block incorrect output\n            try {\n\n                result = eval( expression ).toString();\n\n            } catch( err ) {\n\n                if( err ) {\n                    console.error(\"Invalid input, please check your exprassion. Error \" + err);\n                    alert('Invalid input, please check your exprassion.');\n                    result = expression;\n                }\n\n            }\n\n            // Return calculate results\n            if(result){\n                return result;\n            }\n\n        }\n\n        public appendToExpression( inputVal : string ) {\n\n            // Limit for output data\n            if( this.$scope.output.length >= 40 ){\n                return false;\n            }\n\n            // Create calculate functionality\n            switch (inputVal) {\n                case \"C\" :\n\n                    this.$scope.output = \"\";\n                    this.$scope.decimalAdded = false;\n\n                    break;\n\n                case \"=\" :\n\n                    this.$scope.output = this.calculateExpresion( this.$scope.output );\n\n                    this.$scope.decimalAdded = false;\n\n                    break;\n\n                case \"+\" :\n                case \"-\" :\n                case \"*\" :\n                case \"/\" :\n\n                    this.$scope.output = this.appendOperator( this.$scope.output, inputVal );\n                    this.$scope.decimalAdded = false;\n\n                    break;\n\n                case \"%\" :\n\n                    this.$scope.output = (0.01 * +this.calculateExpresion( this.$scope.output ) ).toString();\n\n                    break;\n                case \".\" :\n\n                    if( !this.$scope.decimalAdded ) {\n\n                        this.$scope.output += inputVal;\n                        this.$scope.decimalAdded = true;\n\n                    }\n\n                    break;\n\n                case \")\" :\n\n                    if( this.$scope.output.length && this.$scope.output.indexOf('(') > -1 ) {\n                        this.$scope.output += inputVal;\n                    }\n\n                    break;\n                default :\n                    this.$scope.output += inputVal;\n            }\n\n            // Resize text depends of expression length\n            this.$scope.outputSize = this.$scope.output.length >= 11 ? 'small' : 'big';\n\n            // Run angular dirty-check\n            if( !this.$scope.$$phase ){\n                this.$scope.$apply();\n            }\n\n        }\n\n    }\n\n}\n","/// <reference path='_all.ts' />\n\n/**\n * The main Test Angular App module.\n *\n * @type {angular.Module}\n */\n\nmodule CalculatorApp {\n    'use strict';\n\n    var CalculatorApp = angular.module( 'App', [] )\n        .controller( 'CalculatorCtrl', CalculatorCtrl )\n        .directive( 'calculatorView', CalculatorView )\n}\n","/// <reference path='typings/jquery/jquery.d.ts' />\n/// <reference path='typings/angularjs/angular.d.ts' />\n/// <reference path='interfaces/CalculatorModels.ts' />\n/// <reference path='directives/CalculatorView.ts' />\n/// <reference path='controllers/CalculatorCtrl.ts' />\n/// <reference path='Application.ts' />"],"sourceRoot":"/source/"}